version: '3.9'


services:
  api:
    build: .
    container_name: api
    ports:
      - 3001:3000
    volumes:
      - .:/usr/app
    links:
      - mongo1
    depends_on:
      - mongo1
    # networks:
    #   - mongo-replica-set-bridge
  # mongo1:
  #   image: mongo:5.0
  #   container_name: mongo1
  #   command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001"]
  #   environment:
  #     - MONGODB_DATABASE=app
  #   volumes:
  #     - ./data/mongo-1:/data/db
  #   ports:
  #     - 30001:30001
  #   healthcheck:
  #     test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"localhost:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
  #     interval: 10s
  #     start_period: 30s
  #   depends_on:
  #     - mongo2
  #     - mongo3
  #   networks:
  #     - mongo-replica-set-bridge

  # mongo2:
  #   image: mongo:5.0
  #   container_name: mongo2
  #   command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002"]
  #   environment:
  #     - MONGODB_DATABASE=app
  #   volumes:
  #     - ./data/mongo-2:/data/db
  #   ports:
  #     - 30002:30002
  #   networks:
  #     - mongo-replica-set-bridge

  # mongo3:
  #   image: mongo:5.0
  #   container_name: mongo3
  #   command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003"]
  #   environment:
  #     - MONGODB_DATABASE=app
  #   volumes:
  #     - ./data/mongo-3:/data/db
  #   ports:
  #     - 30003:30003
  #   networks:
  #     - mongo-replica-set-bridge

# networks:
#   mongo-replica-set-bridge:
#     driver: bridge

# volumes:
#   mongoDBvolume:
#     driver: local
